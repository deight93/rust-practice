fn main() {
    // E. Copy와 Clone 비교

    /*
    Copy vs Clone 비교

    * Copy  : = 연산 혹은 함수 파라미터 전달 시 암묵적으로 발생한다.
      Clone : a.clone()처럼 명시적으로 clone 메서드를 호출해야 한다.

    * Copy  : 스택에 있는 데이터만 복사하고, 힙 데이터는 복사하지 않는다.
      Clone : 힙 데이터까지 새로 복사할 수 있다.

    * Copy  : String의 경우 스택 정보만 복사되어 기존 힙 데이터와 연결된다 (사실상 move).
      Clone : String의 경우 스택과 힙 데이터를 모두 복사한다.
    */

    // ---------------------------------------------------------------
    // String 값에 대한 Copy와 Clone 비교

    // copy를 사용한 예
    let s1 = String::from("hello");
    let s2 = s1; // move

    // println!("s1: {}", s1); //error[E0382]: borrow of moved value: `s1`
    println!("s2: {}", s2);

    // (1) String은 Copy 트레잇이 구현되어 있지 않기에, 스택 정보만 s2에 복사되고 힙 데이터는 그대로 존재한다.
    //      즉, 힙 데이터인 "hello"는 그대로 남아 있고, 이 힙 데이터를 가리키는 변수만 s2로 변경된다.
    // (2) s1이 소유권을 잃었기에, 출력하는 시도에 대해서 에러가 출력된다.

    // ---------------------------------------------------------------
    // clone을 사용한 예
    let s1 = String::from("hello");
    let s2 = s1.clone();

    println!("s1: {}", s1);
    println!("s2: {}", s2);
    // 힙에 "hello" 값이 새롭게 생기고, 신규 변수 s2가 그 소유권을 가진다.
    // 그리고, 원래의 변수 s1도 원래의 "hello" 값에 대한 소유권을 그대로 가지고 있다.
    // ---------------------------------------------------------------
}
